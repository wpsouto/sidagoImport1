<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings
    xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
    version="2.1">

    <named-native-query name="Gta.findAllDataMapping" result-set-mapping="GtaDTOResult">
        <query>
            SELECT gt.id_gta                            AS id,
            CAST(gt.nu_gta AS integer)                  AS numero,
            gt.nu_serie                                 AS serie,
            gt.ts_emissao                               AS emissao,
            trim(dados->>'id_boleto')                   AS dare,
            CAST(dados->>'vl_gta' AS numeric)           AS valor,
            case when gt.bo_ativo = TRUE then 'Não' else 'Sim' end as cancelada,

            f.id_finalidade                             AS finalidade_id,
            f.no_finalidade                             AS finalidade_nome,

            es.id                                       AS especie_id,
            es.no_especie                               AS especie_nome,

            dados->>'transporte'                        AS transporte_nome,

            dados->>'nome_emissor'                      AS emissor_nome,
            dados->>'documento_emissor'                 AS emissor_documento,
            lote.id                                     AS emissor_lotacao_id,
            lote.nome                                   AS emissor_lotacao_nome,
            reg.id                                      AS emissor_lotacao_regional_id,
            reg.nome                                    AS emissor_lotacao_regional_nome,

            gto.tp_origem                               AS origem_tipo,
            dados->'origem'->>'codigo_estabelecimento'  AS origem_estabelecimento_codigo,
            dados->'origem'->>'nome_fantasia'           AS origem_estabelecimento_nome_fantasia,
            dados->'origem'->>'razao_social'            AS origem_estabelecimento_razao_social,
            dados->'origem'->>'inscricao_estadual'      AS origem_estabelecimento_ie,
            dados->'origem'->>'documento'               AS origem_estabelecimento_proprietario_documento,
            lo.loc_no                                   AS origem_municipio_nome,
            lo.ufe_sg                                   AS origem_municipio_uf,
            COALESCE(lo.lat,0)                          AS origem_municipio_localizacao_latitude,
            COALESCE(lo.lon,0)                          AS origem_municipio_localizacao_longitude,

            gtd.tp_destino                              AS destino_tipo,
            dados->'destino'->>'codigo_estabelecimento' AS destino_estabelecimento_codigo,
            dados->'destino'->>'nome_fantasia'          AS destino_estabelecimento_nome_fantasia,
            dados->'destino'->>'razao_social'           AS destino_estabelecimento_razao_social,
            dados->'destino'->>'inscricao_estadual'     AS destino_estabelecimento_ie,
            dados->'destino'->>'documento'              AS destino_estabelecimento_proprietario_documento,
            ld.loc_no                                   AS destino_municipio_nome,
            ld.ufe_sg                                   AS destino_municipio_uf,
            COALESCE(ld.lat,0)                          AS destino_municipio_localizacao_latitude,
            COALESCE(ld.lon,0)                          AS destino_municipio_localizacao_longitude,

            (SELECT COALESCE(SUM(gem.nu_quantidade), 0)
            FROM gta.estratificacao_gta AS gem
            INNER JOIN dsa.estratificacao AS em ON gem.id_estratificacao = em.id
            WHERE gem.id_gta = gt.id_gta
            AND em.tp_sexo = 'FE')                   AS estratificacao_femea,
            (SELECT COALESCE(SUM(gem.nu_quantidade), 0)
            FROM gta.estratificacao_gta AS gem
            INNER JOIN dsa.estratificacao AS em ON gem.id_estratificacao = em.id
            WHERE gem.id_gta = gt.id_gta
            AND em.tp_sexo = 'MA')                   AS estratificacao_macho,
            (SELECT COALESCE(SUM(gem.nu_quantidade), 0)
            FROM gta.estratificacao_gta AS gem
            INNER JOIN dsa.estratificacao AS em ON gem.id_estratificacao = em.id
            WHERE gem.id_gta = gt.id_gta
            AND em.tp_sexo = 'IN')                   AS estratificacao_indefinido,
            (SELECT COALESCE(SUM(gem.nu_quantidade), 0)
            FROM gta.estratificacao_gta AS gem
            INNER JOIN dsa.estratificacao AS em ON gem.id_estratificacao = em.id
            WHERE gem.id_gta = gt.id_gta)            AS estratificacao_total

            FROM gta.gta as gt
            INNER JOIN gta.finalidade AS f ON gt.id_finalidade = f.id_finalidade
            INNER JOIN dsa.especie AS es ON gt.id_especie = es.id
            INNER JOIN rh.lotacao AS lote ON gt.id_lotacao_emissor = lote.id
            INNER JOIN rh.lotacao AS reg ON lote.id_lotacao_pai = reg.id
            INNER JOIN gta.gta_origem AS gto ON gt.id_gta = gto.id_gta
            INNER JOIN gta.gta_destino AS gtd ON gt.id_gta = gtd.id_gta
            INNER JOIN dne.log_localidade AS lo ON gto.id_municipio = lo.loc_nu
            INNER JOIN dne.log_localidade AS ld ON gtd.id_municipio = ld.loc_nu
            WHERE gt.id_gta > 6300012
            ORDER BY gt.id_gta ASC
        </query>
    </named-native-query>

    <named-native-query name="TermoFiscalizacao.findAllDataMapping" result-set-mapping="TermoFiscalizacaoDTOResult">
        <query>
            SELECT tro.id_termoobjetivo                             AS id,
            tf.id_termofiscalizacao                                 AS termofiscalizacao_id,
            CAST(tf.nu_termo AS integer)                            AS numero,
            tf.nu_serie                                             AS serie,
            tf.dt_criacaotermo                                      AS emissao,
            pr.ds_programa                                          AS programa,
            ob.ds_objetivo                                          AS objetivo,
            su.ds_subobjetivofiscalizacao                           AS subobjetivo,
            pd.ds_nome                                              AS produto,
            epd.ds_especificacaoproduto                             AS subproduto,
            tro.nu_quantidade                                       AS quantidade,
            case when tf.tem_auto then 'Sim' else 'Não' end         AS autuado,
            case when tf.ativo then 'Não' else 'Sim' end            AS cancelada,

            CASE
            WHEN tf.tp_caracterizacao = 'AN' THEN 'Animal'
            WHEN tf.tp_caracterizacao = 'VE' THEN 'Vegetal'
            ELSE 'Não classificado'
            END                                                   AS caracterizacao,

            CASE
            WHEN tf.bo_propriedade THEN 'Propriedade'
            WHEN tf.bo_empresa THEN 'Estabelecimento Comercial'
            WHEN tf.bo_industria THEN 'Estabelecimento Industrial'
            WHEN tf.bo_transito THEN 'Trânsito'
            WHEN tf.bo_evento THEN 'Evento Agropecuário'
            ELSE
            CASE
            WHEN tf.no_entidade = 'pessoa' THEN 'Pessoa Física'
            WHEN tf.no_entidade = 'propriedade' THEN 'Propriedade'
            WHEN tf.no_entidade = 'outro' THEN 'Outros não indentificado'
            ELSE 'Não classificado'
            END
            END                                                   AS identificacao,

            tf.ds_rginscricaoestadual                               AS fiscalizado_ie,
            pfi.nome                                                AS fiscalizado_nome,
            dfi.numero                                              AS fiscalizado_documento,
            mf.loc_no                                               AS fiscalizado_municipio_nome,
            mf.ufe_sg                                               AS fiscalizado_municipio_uf,
            COALESCE(mf.lat, 0)                                     AS fiscalizado_municipio_localizacao_latitude,
            COALESCE(mf.lon, 0)                                     AS fiscalizado_municipio_localizacao_longitude,


            tf.ds_responsavelnome                                   AS responsavel_nome,
            tf.ds_responsavelcpf                                    AS responsavel_documento,

            pse.nome                                                AS emissor_nome,
            dse.numero                                              AS emissor_documento,
            lota.id                                                 AS emissor_lotacao_id,
            lota.nome                                               AS emissor_lotacao_nome,
            case when lota.bo_organograma then 'Sim' else 'Não' end AS emissor_lotacao_organograma,
            reg.id                                                  AS emissor_lotacao_regional_id,
            reg.nome                                                AS emissor_lotacao_regional_nome

            FROM fisc.termo_fiscalizacao AS tf
            INNER JOIN fisc.termoobjetivo_fiscalizacao AS tro ON tf.id_termofiscalizacao = tro.id_termofiscalizacao
            INNER JOIN fisc.programa_fiscalizacao AS pr ON tro.id_programafiscalizacao = pr.id_programafiscalizacao
            INNER JOIN fisc.objetivo_fiscalizacao AS ob ON tro.id_objetivofiscalizacao = ob.id_objetivofiscalizacao
            LEFT JOIN fisc.subobjetivo_fiscalizacao AS su ON tro.id_subobjetivofiscalizacao = su.id_subobjetivofiscalizacao
            LEFT JOIN produtos.produto AS pd ON tro.id_produto = pd.id_produto
            LEFT JOIN produtos.subproduto AS spd ON tro.id_subproduto = spd.id_subproduto
            LEFT JOIN produtos.especificacao_produto AS epd ON epd.id_especificacaoproduto = spd.id_especificacaoproduto
            LEFT JOIN rh.pessoa AS pfi ON pfi.id = tf.id_entidade
            LEFT JOIN rh.documento AS dfi ON dfi.id_pessoa = pfi.id and dfi.id_documento_tipo in (1, 2)
            LEFT JOIN rh.pessoa AS pse ON pse.id = tf.id_criadortermo
            LEFT JOIN rh.lotacao_funcionario AS lf ON pse.id = lf.id_pessoa AND dt_final IS NULL
            INNER JOIN rh.lotacao AS lota ON lf.id_lotacao = lota.id
            INNER JOIN rh.lotacao AS reg ON lota.id_lotacao_pai = reg.id
            LEFT JOIN rh.documento AS dse ON dse.id_pessoa = pse.id and dse.id_documento_tipo in (1, 2)
            LEFT JOIN dne.log_localidade AS mf ON mf.loc_nu = tf.id_municipio_fiscalizado
            WHERE tf.bo_termoautojuridico = false
            ORDER BY tro.id_termoobjetivo
        </query>
    </named-native-query>

    <sql-result-set-mapping name="GtaDTOResult">
        <constructor-result target-class="com.mycompany.myapp.service.dto.GtaDTO">
            <column name="id"/>
            <column name="numero"/>
            <column name="serie"/>
            <column name="emissao"/>
            <column name="dare"/>
            <column name="valor"/>
            <column name="cancelada"/>
            <column name="finalidade_id"/>
            <column name="finalidade_nome"/>
            <column name="especie_id"/>
            <column name="especie_nome"/>
            <column name="transporte_nome"/>
            <column name="emissor_nome"/>
            <column name="emissor_documento"/>
            <column name="emissor_lotacao_id"/>
            <column name="emissor_lotacao_nome"/>
            <column name="emissor_lotacao_regional_id"/>
            <column name="emissor_lotacao_regional_nome"/>
            <column name="origem_tipo"/>
            <column name="origem_estabelecimento_codigo"/>
            <column name="origem_estabelecimento_nome_fantasia"/>
            <column name="origem_estabelecimento_razao_social"/>
            <column name="origem_estabelecimento_ie"/>
            <column name="origem_estabelecimento_proprietario_documento"/>
            <column name="origem_municipio_nome"/>
            <column name="origem_municipio_uf"/>
            <column name="origem_municipio_localizacao_latitude"/>
            <column name="origem_municipio_localizacao_longitude"/>
            <column name="destino_tipo"/>
            <column name="destino_estabelecimento_codigo"/>
            <column name="destino_estabelecimento_nome_fantasia"/>
            <column name="destino_estabelecimento_razao_social"/>
            <column name="destino_estabelecimento_ie"/>
            <column name="destino_estabelecimento_proprietario_documento"/>
            <column name="destino_municipio_nome"/>
            <column name="destino_municipio_uf"/>
            <column name="destino_municipio_localizacao_latitude"/>
            <column name="destino_municipio_localizacao_longitude"/>
            <column name="estratificacao_femea"/>
            <column name="estratificacao_macho"/>
            <column name="estratificacao_indefinido"/>
            <column name="estratificacao_total"/>
        </constructor-result>
    </sql-result-set-mapping>

    <sql-result-set-mapping name="TermoFiscalizacaoDTOResult">
        <constructor-result target-class="com.mycompany.myapp.service.dto.TermoFiscalizacaoDTO">
            <column name="id"/>
            <column name="termofiscalizacao_id"/>
            <column name="numero"/>
            <column name="serie"/>
            <column name="emissao"/>
            <column name="programa"/>
            <column name="objetivo"/>
            <column name="subobjetivo"/>
            <column name="produto"/>
            <column name="subproduto"/>
            <column name="quantidade"/>
            <column name="autuado"/>
            <column name="cancelada"/>
            <column name="caracterizacao"/>
            <column name="identificacao"/>
            <column name="fiscalizado_ie"/>
            <column name="fiscalizado_nome"/>
            <column name="fiscalizado_documento"/>
            <column name="fiscalizado_municipio_nome"/>
            <column name="fiscalizado_municipio_uf"/>
            <column name="fiscalizado_municipio_localizacao_latitude"/>
            <column name="fiscalizado_municipio_localizacao_longitude"/>
            <column name="responsavel_nome"/>
            <column name="responsavel_documento"/>
            <column name="emissor_nome"/>
            <column name="emissor_documento"/>
            <column name="emissor_lotacao_id"/>
            <column name="emissor_lotacao_nome"/>
            <column name="emissor_lotacao_organograma"/>
            <column name="emissor_lotacao_regional_id"/>
            <column name="emissor_lotacao_regional_nome"/>
        </constructor-result>
    </sql-result-set-mapping>
</entity-mappings>
