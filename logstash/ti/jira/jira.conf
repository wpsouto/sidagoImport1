input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://bdinfra.agrodefesa.go.gov.br:5432/jiradb"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement_filepath => "/home/wemerson/IdeaProjects/sidagoImport1/logstash/ti/jira/jira.sql"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "100000"
        schedule => "59 08 * * * America/Sao_Paulo"
    }
}

filter {
    jdbc_streaming {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement => "SELECT ch.id   AS chamado_id,
                             cc.nome AS classificacao_nome,
                             pe.nome AS solicitante_nome,
                             lt.nome AS solicitante_lotacao_nome
                      FROM chamado.chamado_abrir ch
                             INNER JOIN rh.pessoa AS pe ON ch.id_pessoa = pe.id
                             INNER JOIN rh.lotacao AS lt ON ch.id_lotacao = lt.id
                             INNER JOIN chamado.chamado_classificacao AS cc ON ch.id_classificacao = cc.id
                      WHERE upper(ch.nu_jira) = :param_01
                     "
        parameters => { "param_01" => "codigo" }
        target => "chamado_list"
    }

    ruby {
        code => "
                chamado_list = event.get('[chamado_list]')

                quantidade = chamado_list.length
                chamado = 'Sim'
                id = event.get('[chamado_list][0][chamado_id]')
                classificacao = event.get('[chamado_list][0][classificacao_nome]')
                solicitante = event.get('[chamado_list][0][solicitante_nome]')
                lotacao = event.get('[chamado_list][0][solicitante_lotacao_nome]')

                if solicitante.nil?
                  chamado = 'Não'
                  quantidade = 0
                  solicitante = event.get('[solicitante]')
                  lotacao = 'Gerência de Tecnologia'
                end

                event.set('[chamado_encontrado]', chamado)
                event.set('[chamado_id]', id)
                event.set('[chamado_quantidade]', quantidade)
                event.set('[chamado_classificacao_nome]', classificacao)
                event.set('[chamado_solicitante_nome]', solicitante)
                event.set('[chamado_solicitante_lotacao_nome]', lotacao)

                "
    }

}

output {
    elasticsearch {
        index => "jira"
        document_id => "%{id}"
        hosts => ["http://elastic2.agrodefesa.go.gov.br:9200", "http://elastic3.agrodefesa.go.gov.br:9200"]
        user => "elastic"
        password => "mito2019"
    }

    elasticsearch {
        index => "jira_concluido"
        document_id => "%{id}"
        hosts => ["http://elastic2.agrodefesa.go.gov.br:9200", "http://elastic3.agrodefesa.go.gov.br:9200"]
        user => "elastic"
        password => "mito2019"
    }

}
