input {
  jdbc  {
    jdbc_driver_library => "C:\Logstash\lib\sqljdbc42.jar"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    jdbc_connection_string => "jdbc:sqlserver://myServer;databaseName=myDatabase;user=myUser;password=myPassword;"
    jdbc_user => "myUser"
    jdbc_password => "myPassword"
    statement => "EXECUTE dbo.MyLogstashProcedure;"
    schedule => "* * * * *"
  }
}

filter {
  ruby {
    code = "
      hash = event.to_hash
        hash.each do |k,v|
          if v == nil
            event.remove(k)
        end
      end
      "
  }

  #Format RelatedData XMLs
  xml
  {
    source => "relatedproducts"
    target => "parsed_relatedproducts"
  }
  xml
  {
    source => "relatedcountries"
    target => "parsed_relatedcountries"
  }
  xml
  {
    source => "reportpermissions"
    target => "parsed_reportpermissions"
  }

  # Format RelatedProducts XML into objects
  if [relatedproducts]
  {
    ruby
    {
      code => "
        event['parsed_relatedproducts']['RelatedProducts'].each do |x|
          x.each do |key, value|
            if value.count == 1
              x[key] = value[0]
            end
        end
      end"
    }
  }

  # Format RelatedCountries XML into objects
  if [relatedcountries]
  {
    ruby
    {
      code => "
        event['parsed_relatedcountries']['RelatedCountries'].each do |x|
          x.each do |key, value|
            if value.count == 1
              x[key] = value[0]
            end
        end
      end"
    }
  }

  # Rename fields back to their real names. JDBC Driver auto-lowercases them and Elasticsearch is case-sensitive
  mutate
  {
    rename =>
    {
      "itemsourceid" => "ItemSourceID"
      "itemtypeid" => "ItemTypeID"
      "title" => "Title"
      "datepublished" => "DatePublished"
      "[parsed_relatedproducts][RelatedProducts]" => "[RelatedProducts]"
      "[parsed_relatedcountries][RelatedCountries]" => "[RelatedCountries]"
      "[parsed_reportpermissions][ReportPermissions]" => "[ReportPermissions]"
    }

    remove_field =>
      [
        "@version"
        , "@timestamp"
        , "relatedproducts"
        , "relatedcountries"
        , "reportpermissions"
        , "parsed_relatedproducts"
        , "parsed_relatedcountries"
        , "parsed_reportpermissions"
      ]
  }
}
output {
  #stdout { codec => rubydebug }
  elasticsearch
  {
    host => "localhost"
    protocol => "http"
    action => "index"
    index => "myIndex"
    document_type => "myType"
    document_id => "%{documentId}"
  }  
}
