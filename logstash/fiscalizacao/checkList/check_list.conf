input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement_filepath => "/etc/logstash/conf.d/fiscalizacao/check_list/check_list.sql"
        jdbc_paging_enabled => "true"
		jdbc_page_size => "100000"
        schedule => "0 20 * * * America/Sao_Paulo"
    }
}

filter {
    jdbc_streaming {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement => "SELECT sum(cr.nu_pontuacao) AS pontuacao
                      FROM fisc.checklist_pergunta AS cp
                             INNER JOIN fisc.checklist_resposta AS cr ON cr.id_checklistpergunta = cp.id_checklistpergunta
                             INNER JOIN fisc.checklistresposta_tf AS chtf ON chtf.id_checklistresposta = cr.id_checklistresposta
                             INNER JOIN fisc.termo_fiscalizacao AS tf ON tf.id_termofiscalizacao = chtf.id_termofiscalizacao
                      WHERE cp.id_checklist = :param_01
                        AND tf.id_termofiscalizacao =
                            (SELECT max(tf.id_termofiscalizacao)
                             FROM fisc.checklist AS ch
                                    INNER JOIN fisc.checklist_pergunta AS cp ON cp.id_checklist = ch.id_checklist
                                    INNER JOIN fisc.checklist_resposta AS cr ON cr.id_checklistpergunta = cp.id_checklistpergunta
                                    INNER JOIN fisc.checklistresposta_tf AS chtf ON chtf.id_checklistresposta = cr.id_checklistresposta
                                    INNER JOIN fisc.termo_fiscalizacao AS tf ON tf.id_termofiscalizacao = chtf.id_termofiscalizacao
                             WHERE tf.ativo = true
                               AND ch.id_checklist = :param_01
                               AND tf.id_termofiscalizacao <> :param_02
                               AND tf.id_inscricaoestadual = :param_03)
                     "
        parameters => { "param_01" => "check_list_id" }
        parameters => { "param_02" => "termo_fiscalizacao_id" }
        parameters => { "param_03" => "fiscalizado_id" }
        target => "checklist_pontuacao_anterior"
    }

    jdbc_streaming {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement => "SELECT sum(cr.nu_pontuacao) AS pontuacao
                        FROM fisc.checklist_pergunta AS cp
                                 INNER JOIN fisc.checklist_resposta AS cr ON cr.id_checklistpergunta = cp.id_checklistpergunta
                                 INNER JOIN fisc.checklistresposta_tf AS chtf ON chtf.id_checklistresposta = cr.id_checklistresposta
                                 INNER JOIN fisc.termo_fiscalizacao AS tf ON tf.id_termofiscalizacao = chtf.id_termofiscalizacao
                        WHERE cp.id_checklist = :param_01
                        AND   tf.id_termofiscalizacao = :param_02
                     "
        parameters => { "param_01" => "check_list_id" }
        parameters => { "param_02" => "termo_fiscalizacao_id" }
        target => "checklist_pontuacao"
    }

    jdbc_streaming {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement => "SELECT TRIM(UPPER(chr.no_resultado)) AS risco,
                             chr.nu_intervaloinicio AS inicio,
                             chr.nu_intervalofim AS fim,
                             CASE
                                WHEN chr.id_cor = 1 THEN 'Verde'
                                WHEN chr.id_cor = 2 THEN 'Amarelo'
                                WHEN chr.id_cor = 3 THEN 'Vermelho'
                             END                         AS cor
                                FROM fisc.checklist_resultado AS chr
                        WHERE chr.id_checklist = :id
                        AND :pontuacao between nu_intervaloinicio
                        AND nu_intervalofim
                      "
        parameters => { "id" => "check_list_id" }
        parameters => { "pontuacao" => "[checklist_pontuacao][0][pontuacao]" }
        target => "checklist_risco"
    }

    ruby {
        code => "
                pontuacao = event.get('[checklist_pontuacao][0][pontuacao]')
                pontuacao_anterior = event.get('[checklist_pontuacao_anterior][0][pontuacao]')
                risco = event.get('[checklist_risco][0][risco]')
                inicio = event.get('[checklist_risco][0][inicio]')
                fim = event.get('[checklist_risco][0][fim]')
                cor = event.get('[checklist_risco][0][cor]')

                if pontuacao_anterior.nil?
                  pontuacao_anterior = 0
                end
                event.set('[pontuacao_anterior]', pontuacao_anterior)

                if pontuacao.nil?
                  pontuacao = 0
                end
                event.set('[pontuacao_atual]', pontuacao)

                diferenca = (pontuacao - pontuacao_anterior).abs
                if pontuacao > pontuacao_anterior
                  status = 'MAIOR'
                end
                if pontuacao < pontuacao_anterior
                  status = 'MENOR'
                end
                if pontuacao == pontuacao_anterior
                  status = 'IQUAL'
                end
                event.set('[pontuacao_diferenca]', diferenca)
                event.set('[pontuacao_status]', status)
                event.set('[cor]', cor)

                if risco.nil?
                  risco = 'SEM RISCO'
                end
                event.set('[risco]', risco)
                event.set('[inicio]', inicio)
                event.set('[fim]', fim)

                "
    }

    mutate {
        rename =>{
        	"check_list_id" => "[check_list][id]"
        	"check_list_descricao" => "[check_list][descricao]"
        	"check_list_pontuacao_maxima" => "[check_list][pontuacao_maxima]"
            "check_list_pontuacao_minima" => "[check_list][pontuacao_minima]"

        	"fiscalizado_ie" => "[fiscalizado][ie]"
        	"fiscalizado_nome" => "[fiscalizado][nome]"
        	"fiscalizado_id" => "[fiscalizado][id]"
        	"fiscalizado_regional_nome" => "[fiscalizado][regional][nome]"
        	"fiscalizado_municipio_nome" => "[fiscalizado][municipio][nome]"
        	"fiscalizado_municipio_uf" => "[fiscalizado][municipio][uf]"
        	"fiscalizado_municipio_ibge" => "[fiscalizado][municipio][ibge]"
        	"fiscalizado_municipio_localizacao_latitude" => "[fiscalizado][municipio][localizacao][lat]"
        	"fiscalizado_municipio_localizacao_longitude" => "[fiscalizado][municipio][localizacao][lon]"

        	"emissor_nome" => "[emissor][nome]"
        	"emissor_documento" => "[emissor][documento]"

		    "termo_fiscalizacao_id" => "[termo_fiscalizacao][id]"
		    "termo_fiscalizacao_entidade_id" => "[termo_fiscalizacao][entidade][id]"
		    "termo_fiscalizacao_entidade_documento" => "[termo_fiscalizacao][entidade][documento]"
		    "termo_fiscalizacao_emissao" => "[termo_fiscalizacao][emissao]"
		    "termo_fiscalizacao_quantidade" => "[termo_fiscalizacao][quantidade]"

            "[risco]" => "[pontuacao][risco]"
            "[cor]" => "[pontuacao][cor]"
            "[inicio]" => "[pontuacao][inicio]"
            "[fim]" => "[pontuacao][fim]"
		    "[pontuacao_atual]" => "[pontuacao][atual]"
		    "[pontuacao_anterior]" => "[pontuacao][anterior]"
		    "[pontuacao_diferenca]" => "[pontuacao][diferenca]"
		    "[pontuacao_status]" => "[pontuacao][status]"
	    }

		remove_field => ["checklist_pontuacao_anterior", "checklist_risco", "checklist_pontuacao", "ts_alteracao", "tags"]
    }
}

output {
    elasticsearch {
        index => "check_list"
        document_id => "%{id}"
        hosts => ["http://elastic2.agrodefesa.go.gov.br:9200", "http://elastic3.agrodefesa.go.gov.br:9200"]
        user => "elastic"
        password => "mito2019"
    }
    elasticsearch {
        index => "check_list-%{+MM.dd}"
        document_id => "%{id}"
        hosts => ["http://elastic2.agrodefesa.go.gov.br:9200", "http://elastic3.agrodefesa.go.gov.br:9200"]
        user => "elastic"
        password => "mito2019"
    }
}
