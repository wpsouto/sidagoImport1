input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement_filepath => "/etc/logstash/conf.d/inspecao/linha_inspecao/linha_inspecao.sql"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "100000"
        schedule => "30 00 * * * America/Sao_Paulo"
    }
}

filter {
    ruby {
        code => "
                    event.set('propriedade_gps', nil)

                    lat = event.get('propriedade_gps_latitude').to_s
                    deg = lat[0,2].to_f
                    min = lat[2,2].to_f
                    sec = lat[4,2].to_f + (lat[6,1].to_f / 10)
                    lat_output = deg+min+sec

                    if lat_output > 0
                      lat_output = (deg + (min / 60.0) + (sec / 3600.0))*-1
                      lat_output = lat_output.abs > 90 ? 0 : lat_output
                    end

                    lon = event.get('propriedade_gps_longitude').to_s
                    deg = lon[0,2].to_f
                    min = lon[2,2].to_f
                    sec = lon[4,2].to_f + (lon[6,1].to_f / 10)
                    lon_output = deg+min+sec

                    if lon_output > 0
                      lon_output = (deg + (min / 60.0) + (sec / 3600.0))*-1
                      lon_output = lon_output.abs > 180 ? 0 : lon_output
                    end

                    if (lat_output < 0 && lon_output < 0)
                      output = lat_output.to_s + ',' + lon_output.to_s
                      event.set('propriedade_gps', output)
                    end

                "
    }

    mutate {
   	    remove_field => ["propriedade_gps_latitude", "propriedade_gps_longitude"]
        rename =>{
		    "propriedade_municipio_gps_latitude" => "[propriedade_municipio_gps][lat]"
		    "propriedade_municipio_gps_longitude" => "[propriedade_municipio_gps][lon]"
	    }
    }
}

output {
    elasticsearch {
        index => "linha_inspecao"
        document_id => "%{id}"
        hosts => ["http://elastic2.agrodefesa.go.gov.br:9200", "http://elastic3.agrodefesa.go.gov.br:9200"]
        user => "elastic"
        password => "mito2019"
    }
}
