input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement_filepath => "/etc/logstash/conf.d/defesa_animal/vacinacao_etapa_atual/vacinacao_etapa_atual.sql"
        #statement_filepath => "/home/wemerson/IdeaProjects/sidagoImport1/logstash/defesa_animal/vacinacao_etapa_atual/vacinacao_etapa_atual.sql"
        jdbc_paging_enabled => "true"
		jdbc_page_size => "100000"
        #schedule => "41 18 * * *"
        schedule => "0 18 * * *"
    }
}

filter {
    jdbc_streaming {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement => "SELECT 'Sim'       AS vacinado,
                             nu_vacinado AS quantidade,
                             CASE
                                WHEN tp_vacinacao = 'PR' THEN 'PRODUTOR'
                                WHEN tp_vacinacao = 'OF' THEN 'OFICIAL'
                                WHEN tp_vacinacao = 'AS' THEN 'ASSISTIDA'
                                WHEN tp_vacinacao = 'FI' THEN 'FISCALIZADA'
                                WHEN tp_vacinacao = 'VE' THEN 'VETERINARIO'
                                ELSE 'PRODUTOR'
                             END         AS tipo
                      FROM dsa.vacinacao AS va
                             INNER JOIN dsa.vacinacao_estratificacao AS ve ON ve.id_vacinacao = va.id
                      WHERE va.id_campanha_vacina = 51
                        AND va.tp_origem not in ('RT', 'TG')
                        AND va.id_inscricaoestadual = :param_01
                      AND ve.id_estratificacao = :param_02
                     "
        parameters => { "param_01" => "propriedade_id" }
        parameters => { "param_02" => "estratificacao_id" }
        target => "aftosa"
    }

    jdbc_streaming {
        jdbc_connection_string => "jdbc:postgresql://bdprod.agrodefesa.go.gov.br:5432/sistemas"
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_user => "postgres"
        jdbc_password => "postgres"
        jdbc_driver_class => "org.postgresql.Driver"
        statement => "SELECT 'Sim'       AS vacinado,
                             nu_vacinado AS quantidade,
                             CASE
                                WHEN tp_vacinacao = 'PR' THEN 'PRODUTOR'
                                WHEN tp_vacinacao = 'OF' THEN 'OFICIAL'
                                WHEN tp_vacinacao = 'AS' THEN 'ASSISTIDA'
                                WHEN tp_vacinacao = 'FI' THEN 'FISCALIZADA'
                                WHEN tp_vacinacao = 'VE' THEN 'VETERINARIO'
                                ELSE 'PRODUTOR'
                             END         AS tipo
                      FROM dsa.vacinacao AS va
                             INNER JOIN dsa.vacinacao_estratificacao AS ve ON ve.id_vacinacao = va.id
                      WHERE va.id_campanha_vacina = 50
                        AND va.tp_origem not in ('RT', 'TG')
                        AND va.id_inscricaoestadual = :param_01
                      AND ve.id_estratificacao = :param_02
                     "
        parameters => { "param_01" => "propriedade_id" }
        parameters => { "param_02" => "estratificacao_id" }
        target => "antirrabica"
    }

    ruby {
        code => "

                vacinado = event.get('[aftosa][0][vacinado]')
                quantidade = event.get('[aftosa][0][quantidade]')
                diferenca = event.get('[aftosa][0][quantidade]')
                tipo = event.get('[aftosa][0][tipo]')

                if vacinado.nil?
                  vacinado = 'Não'
                  quantidade = 0
                  diferenca = event.get('[estratificacao_saldo]')
                end

                event.set('[aftosa][0][vacinado]', vacinado)
                event.set('[aftosa][0][quantidade]', quantidade)
                event.set('[aftosa][0][diferenca]', diferenca)
                event.set('[aftosa][0][tipo]', tipo)

                vacinado = event.get('[antirrabica][0][vacinado]')
                quantidade = event.get('[antirrabica][0][quantidade]')
                diferenca = event.get('[antirrabica][0][quantidade]')
                tipo = event.get('[antirrabica][0][tipo]')

                if vacinado.nil?
                  vacinado = 'Não'
                  quantidade = 0
                  diferenca = event.get('[estratificacao_saldo]')
                end

                event.set('[antirrabica][0][vacinado]', vacinado)
                event.set('[antirrabica][0][quantidade]', quantidade)
                event.set('[antirrabica][0][diferenca]', diferenca)
                event.set('[antirrabica][0][tipo]', tipo)
                "
    }

    mutate {
        rename =>{

   		    "especie_grupo" => "[especie][grupo]"
		    "especie_nome" => "[especie][nome]"

   		    "produtor_nome" => "[produtor][nome]"
		    "produtor_documento" => "[produtor][documento]"

		    "propriedade_id" => "[propriedade][id]"
		    "propriedade_ie" => "[propriedade][ie]"
		    "propriedade_nome" => "[propriedade][nome]"
		    "propriedade_regional_nome" => "[propriedade][regional][nome]"
		    "propriedade_municipio_nome" => "[propriedade][municipio][nome]"
		    "propriedade_municipio_uf" => "[propriedade][municipio][uf]"
		    "propriedade_municipio_localizacao_latitude" => "[propriedade][municipio][localizacao][lat]"
		    "propriedade_municipio_localizacao_longitude" => "[propriedade][municipio][localizacao][lon]"

		    "estratificacao_id" => "[estratificacao][id]"
		    "estratificacao_nome" => "[estratificacao][nome]"
		    "estratificacao_sexo" => "[estratificacao][sexo]"
		    "estratificacao_saldo" => "[estratificacao][saldo]"
		    "estratificacao_total" => "[estratificacao][total]"
		    "estratificacao_positiva" => "[estratificacao][positiva]"

            "[aftosa][0][vacinado]" => "[vacinacao][aftosa][vacinado]"
            "[aftosa][0][quantidade]" => "[vacinacao][aftosa][quantidade]"
            "[aftosa][0][diferenca]" => "[vacinacao][aftosa][diferenca]"
            "[aftosa][0][tipo]" => "[vacinacao][aftosa][tipo]"

            "[antirrabica][0][vacinado]" => "[vacinacao][antirrabica][vacinado]"
            "[antirrabica][0][quantidade]" => "[vacinacao][antirrabica][quantidade]"
            "[antirrabica][0][diferenca]" => "[vacinacao][antirrabica][diferenca]"
            "[antirrabica][0][tipo]" => "[vacinacao][antirrabica][tipo]"

		    "municipio_antirrabica" => "[municipio][antirrabica]"
	    }
    }
}

output {
    elasticsearch {
        index => "vacinacao_etapa_atual"
        document_id => "%{id}"
        hosts => ["http://elastic2.agrodefesa.go.gov.br:9200", "http://elastic3.agrodefesa.go.gov.br:9200"]
        user => "elastic"
        password => "mito2019"
    }
}
